/* Microchip Technology Inc. and its subsidiaries.  You may use this software 
 * and any derivatives exclusively with Microchip products. 
 * 
 * THIS SOFTWARE IS SUPPLIED BY MICROCHIP "AS IS".  NO WARRANTIES, WHETHER 
 * EXPRESS, IMPLIED OR STATUTORY, APPLY TO THIS SOFTWARE, INCLUDING ANY IMPLIED 
 * WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY, AND FITNESS FOR A 
 * PARTICULAR PURPOSE, OR ITS INTERACTION WITH MICROCHIP PRODUCTS, COMBINATION 
 * WITH ANY OTHER PRODUCTS, OR USE IN ANY APPLICATION. 
 *
 * IN NO EVENT WILL MICROCHIP BE LIABLE FOR ANY INDIRECT, SPECIAL, PUNITIVE, 
 * INCIDENTAL OR CONSEQUENTIAL LOSS, DAMAGE, COST OR EXPENSE OF ANY KIND 
 * WHATSOEVER RELATED TO THE SOFTWARE, HOWEVER CAUSED, EVEN IF MICROCHIP HAS 
 * BEEN ADVISED OF THE POSSIBILITY OR THE DAMAGES ARE FORESEEABLE.  TO THE 
 * FULLEST EXTENT ALLOWED BY LAW, MICROCHIP'S TOTAL LIABILITY ON ALL CLAIMS 
 * IN ANY WAY RELATED TO THIS SOFTWARE WILL NOT EXCEED THE AMOUNT OF FEES, IF 
 * ANY, THAT YOU HAVE PAID DIRECTLY TO MICROCHIP FOR THIS SOFTWARE.
 *
 * MICROCHIP PROVIDES THIS SOFTWARE CONDITIONALLY UPON YOUR ACCEPTANCE OF THESE 
 * TERMS. 
 */

/* 
 * File: pourover.h   
 * Author: Xiongyao Zha
 * Comments: PourOver firmware.
 */

// This is a guard condition so that contents of this file are not included
// more than once.  
#ifndef PourOver_h
#define	PourOver_h

#include <xc.h>
#include "configurationbits.h"
#include "definitions.h"
#include "initializations.h"
#include "outputcompare.h"
#include "bluetooth.h"
#include "temperature.h"
/* Variables */
volatile buffer tx_buffer;
volatile buffer rx_buffer;
volatile char receive_flag = 0;

/* Service */
char SERVER_UUID[]     = "11223344556677889900AABBCCDDEEFF";

/* Characteristics */
char START_BREW_U[]    = "75DC2F8004F242F48AB048D642153C91";
char BREW_STATE_U[]    = "D2025D7957084FF1BC76C01E1ABEBB4D";
char BREW_TEMP_U[]     = "7975652BF2A24F73A2DA429AC3A83DFB";
char BREW_SIZE_U[]     = "1CF1A1B203BB4F7CA28A8881169BEDE5";
char WATER_LEVEL_U[]   = "538C13E23739428086AC91AB935A6CE1";
char BEAN_LEVEL_U[]    = "67B0653508394365BF7F8AFC631E54A1";
char BREW_STRENGTH_U[] = "DBFDE0AC2CF241269759042CD13E5681";
char BREW_SCHEDULE_U[] = "6CED5F74565C4608BA3D043F4B0297F9";

char START_BREW_H[]    = "FFFF";
char BREW_STATE_H[]    = "FFFF";
char BREW_TEMP_H[]     = "FFFF";
char BREW_SIZE_H[]     = "FFFF";
char WATER_LEVEL_H[]   = "FFFF";
char BEAN_LEVEL_H[]    = "FFFF";
char BREW_STRENGTH_H[] = "FFFF";
char BREW_SCHEDULE_H[] = "FFFF";

int START_BREW_V    = 0;
int BREW_STATE_V    = 0;
int BREW_TEMP_V     = 0;
int BREW_SIZE_V     = 0;
int WATER_LEVEL_V   = 0;
int BEAN_LEVEL_V    = 0;
int BREW_STRENGTH_V = 0;
int BREW_SCHEDULE_V = 0;

#endif	/* PourOver_h */

